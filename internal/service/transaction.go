// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package service

import (
	"OnchainParser/internal/model"
	"OnchainParser/internal/model/entity"
	"context"
)

type ITransaction interface {
	ExecInsert(ctx context.Context, in model.TransactionCreateInput, chainName string) (err error)
	UpdateGasprice(ctx context.Context, txHash string, gasPrice int64, chainName string) (err error)
	QueryLteListByGasPrice(ctx context.Context, chainName string) (rcd []entity.TransactionEntity, err error)
	QueryExistsByTxHash(ctx context.Context, txHash string, chainName string) (exists bool, err error)
	QueryOneByTxHash(ctx context.Context, txHash string, chainName string) (rcd entity.TransactionEntity, err error)
	QueryListByTime(ctx context.Context, contractAddress string, blockBeginTime string, blockEndTime string, address string, pageSize int, pageNumber int, chainName string) (result []entity.TransactionEntity, err error)
	QueryListByAddress(ctx context.Context, contractAddress string, pageSize int, pageNumber int, chainName string) (result []entity.TransactionEntity, err error)
	QueryOneByAddressAndTxHash(ctx context.Context, contractAddress string, txHash string, chainName string) (result entity.TransactionEntity, err error)
	QueryByAddressAndBlockNumber(ctx context.Context, contractAddress string, blockNumer int, pageSize int, pageNumber int, chainName string) (result []entity.TransactionEntity, err error)
}

var localTransaction ITransaction

func Transaction() ITransaction {
	if localTransaction == nil {
		panic("implement not found for interface ITransaction, forgot register?")
	}
	return localTransaction
}

func RegisterTransaction(i ITransaction) {
	localTransaction = i
}
