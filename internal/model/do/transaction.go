// =================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// =================================================================================
package do

import (
	"github.com/gogf/gf/v2/frame/g"
)

// Transaction is the golang structure of table Transaction for DAO operations like Where/Data.
type TransactionEntity struct {
	g.Meta          `orm:"table:chainData.transaction, do:true"`
	TxHash          interface{} `json:"tx_hash"           `       // 当前交易的哈希值
	TxIndex         interface{} `json:"tx_index"          `       // 签名原始数据
	Height          interface{} `json:"height"            `       // 区块号
	ContractAddress interface{} `json:"contract_address"  `       // 签名数据，用于页面展示
	Status          interface{} `json:"status"             `      // 交易状态 1:成功;0:失败
	From            interface{} `json:"from"              `       // 交易发起者的地址
	To              interface{} `json:"to"             	 `        // 交易接收者的地址
	Value           interface{} `json:"value"             `       // 交易金额
	GasUsed         interface{} `json:"gas_used"          `       // 燃料费
	GasLimit        interface{} `json:"gas_limit"         `       // the gas limit in jager
	GasPrice        interface{} `json:"gas_price"         `       // the gas price in jager
	TransactionFee  interface{} `json:"transaction_fee"         ` // Amount paid to the miner for processing the transaction.
	CreateTime      interface{} `json:"create_time"       `       // 创建时间(时间戳)
	UpdateTime      interface{} `json:"update_time"       `       // 修改时间(时间戳)
	Timestamp       interface{} `json:"timestamp"         `       // 交易时间(时间戳)

}
